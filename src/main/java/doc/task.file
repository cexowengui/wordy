1.我们的项目目标是消息传输系统，暂时就称为一个聊天系统，先做聊天的功能，需要完成的功能暂时是：

1.1 用户注册和添加好友，删除好友不考虑，可以后面再考虑；
1.2 用户可以创建群，添加群，退群解散群不考虑；
1.2 用户可以给自己的还有发送消息，可以给自己的群发送消息，群内的其它成员可以接受消息，非自己的好友和群不能发送；
1.4 用户的消息需要持久化，即好友在线则消息直接发送，不在线需要保存该条信息，直到上线再发送该消息或者保存时间超过最大期限，该消息过期；
1.5 用户发送的群消息也需要持久化，同上；
1.6 用户消息的qos限制，即限制一个用户的消息发送频率；
1.7 提供http服务，即用户可以从web页面完成注册、添加好友、注册群，加群，发送消息、接受消息，这几个功能，
我们暂时不用tomcat服务器作为httpserver，自己写一个简单的http服务器，实际上几乎不会有任何人有机会写web服务器，
但是作为一个技术的练习，这确实不错的；这几个功能完成后，雏形就出来了，后面再改进。

2.项目中需要设计到：
2.1 架构设计，数据结构设计，数据表结构定义；
2.2 线程相关方面的设计，这个很关键；
2.3 消息发送接收；
2.4 消息持久化，我们有两种方式来做消息持久化，一个就是本地文件，一个就是redis，持久化的关键点就是消息如何高效地存进去和高效地取出来
举一个简单的例子：A给B发送消息，B不在线，系统需要把该消息存到本地文件，以这样的格式存在文本中：
“A+B+2016-02-29 12:12:12+hello，B”，表示A在这个时间向B发送hello，B的消息，一行表示一条消息，这就是持久化了，
B上线的时候，有一个步骤就是系统去拉取他不在线的时候的消息，然后将这条消息在本地删除。这只是一个思路，最简
单的。如何设计好消息的持久化数据格式，就是一个关键点，可以参考redis等其它系统的实现。也可以借助于redis，
存在redis里面，然后在redis里面打开持久化功能，依赖redis的持久化功能。

3.分工：
3.1 我先定义几个数据库表和几个类的结构，以及设计下多线程方面的任务，定义一下客户端和服务端的通信协议格式，
完成一个初步的框架搭建，要做到的效果就是：启动消息系统，然后写一个test文件的客户端，注册、添加好友，互相发
送消息，接受消息，群后面你来做；
3.2 后面需要用到http服务，所以你负责做一个httpserver出来，就在wordy下起一个包，我已经在里面有一个例子
了，位于com.example.httpserver里面。要做到的效果就是：你的这个server启动，别人在浏览器输入：
http://ip:port/app/path?aa=bb可以访问到相关网页,可以用com.sun.net.httpserver.HttpServer
这个包做，官方文档有例子，也可以用jetty这种轻量级的包来做，不要用netty、mina，太复杂了，你要觉得可以搞定也行，
这一套东西你后面可以单独拿出来作为一个项目，提供很多高级功能，比如session、cookie，又是一个牛逼的项目；

3.3 群消息你做，消息持久化我单聊文件的，你做群聊文件的，单聊redis的，群聊redis的，也就是消息持久化接口一
套，下面可以有多重实现方式；
3.4 到此之后，我提意见你改进项目，需要改进的东西很多，比如C/S通信的消息协议，消息持久化的文件格式，
HTTP-server的功能和架构；
3.5 将这套系统稍微改一改变成一个云消息队列，写一个sdk出来让别人接入使用；
