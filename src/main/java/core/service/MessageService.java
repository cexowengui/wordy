package core.service;

import core.model.RequestDetail;

public interface MessageService {
	/*
	 * 客户端和服务器的通信协议有多种方式，业界一般采用长度+消息体的方式，参考：http://blog.csdn.net/lincyang/article/details/6109076
	 * 这里不适用这种复杂的方式，为了简化，直接用特殊字符作为间隔符，比如服务器接收到的消息如下：
	 * 2+123456+234567    表示123456这个用户需要添加234567这个用户为好友
	 * 5+123456+234567+hello，你好 表示123456用户想234567用户发送hello，您好的消息
	 * 其中第一位的数字表示action代码，参见CONSTANT类里面的具体意义
	 * 这里一个问题就是间隔符+本身的问题，我们已经将‘+’这个字符作为间隔符，如果遇到本身就需要发送‘+’这个符号，那么会混淆，
	 * 所以实际情况中需要特别考虑间隔符的问题，我们这里暂时不需要，因为我们的格式是：ACTION代码+相关信息只要遵循从前往后的格式解析
	 * 就不会出现歧义的数据包，举例如下：
	 * 接收到消息：
	 * 2+123456+234+567 直接判定为非法，抛弃，因为1表示添加好友，后面只会跟两个用户号码，但是并不存在234+567这样的用户号
	 * 5+123456+234567+1234+2345等于多少  直接解析为用户123456向用户234567发送的消息是1234+2345，最后一个加号不考虑为间隔符，从前往后解析
	 */
	public void parseMessage(String message);//解析消息

}
